{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://schemas.originvault.box/v1/IdentityClaimsAggregationCredential.schema.json",
  "title": "IdentityClaimsAggregationCredential",
  "description": "Creator Identity Assertion Credential Schema for usage in JsonSchema",
  "type": "object",
  "properties": {
    "type": {
      "type": "array",
      "minItems": 2,
      "items": {
        "type": "string"
      },
      "allOf": [
        {
          "contains": {
            "const": "VerifiableCredential"
          }
        },
        {
          "contains": {
            "const": "IdentityClaimsAggregationCredential"
          }
        }
      ]
    },
    "issuer": {
      "oneOf": [
        {
          "$ref": "#/$defs/nonEmptyUri"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "$ref": "#/$defs/nonEmptyUri"
            },
            "name": {
              "$ref": "#/$defs/nonEmptyString"
            }
          },
          "required": [
            "id"
          ]
        }
      ]
    },
    "validFrom": {
      "type": "string",
      "format": "date-time"
    },
    "expiresAt": {
      "type": "string",
      "format": "date-time"
    },
    "credentialSubject": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/$defs/nonEmptyUri"
        },
        "verifiedIdentities": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/$defs/verifiedIdentity"
          }
        },
        "c2paAsset": {
          "type": "object",
          "minProperties": 1,
          "properties": {
            "referenced_assertions": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "properties": {
                  "url": {
                    "$ref": "#/$defs/nonEmptyString"
                  },
                  "hash": {
                    "$ref": "#/$defs/nonEmptyString"
                  },
                  "alg": {
                    "$ref": "#/$defs/nonEmptyString"
                  }
                },
                "required": [
                  "hash"
                ]
              }
            },
            "sig_type": {
              "type": "string"
            },
            "role": {
              "type": "string",
              "enum": [
                "cawg.creator",
                "cawg.contributor",
                "cawg.editor",
                "cawg.producer",
                "cawg.producer",
                "cawg.publisher",
                "cawg.sponsor",
                "cawg.translator"
              ]
            },
            "expected_partial_claim": {
              "type": "string"
            },
            "expected_claim_generator": {
              "type": "string"
            },
            "expected_countersigners": {
              "type": "string"
            }
          },
          "required": [
            "referenced_assertions",
            "sig_type"
          ]
        }
      },
      "required": [
        "id",
        "verifiedIdentities",
        "c2paAsset"
      ]
    },
    "@context": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "JSON-LD context for the credential"
    },
    "issuanceDate": {
      "type": "string",
      "format": "date-time",
      "description": "Date when the credential was issued"
    },
    "proof": {
      "type": "object",
      "description": "Cryptographic proof of the credential"
    },
    "credentialStatus": {
      "type": "object",
      "description": "Status information for credential revocation"
    }
  },
  "required": [
    "type",
    "issuer",
    "validFrom",
    "credentialSubject",
    "@context",
    "issuanceDate"
  ],
  "$defs": {
    "nonEmptyString": {
      "type": "string",
      "minLength": 1,
      "description": "A non-empty string"
    },
    "nonEmptyUri": {
      "type": "string",
      "minLength": 1,
      "format": "uri",
      "description": "A non-empty URI string"
    },
    "identifiableObject": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/$defs/nonEmptyUri",
          "description": "The unique identifier URI"
        },
        "name": {
          "$ref": "#/$defs/nonEmptyString",
          "description": "The name of the object"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "description": "An object with an identifiable URI and name"
    },
    "verifiedIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/$defs/nonEmptyString"
        },
        "username": {
          "type": "string",
          "minLength": 1
        },
        "uri": {
          "$ref": "#/$defs/nonEmptyUri"
        },
        "provider": {
          "$ref": "#/$defs/identifiableObject"
        },
        "verifiedAt": {
          "$ref": "#/$defs/nonEmptyString",
          "format": "date-time"
        },
        "name": {
          "$ref": "#/$defs/nonEmptyString"
        },
        "method": {
          "$ref": "#/$defs/nonEmptyString"
        },
        "address": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "type",
        "verifiedAt"
      ],
      "oneOf": [
        {
          "properties": {
            "type": {
              "const": "cawg.social_media"
            }
          },
          "required": [
            "username",
            "uri",
            "provider",
            "verifiedAt"
          ]
        },
        {
          "properties": {
            "type": {
              "const": "cawg.crypto_wallet"
            }
          },
          "required": [
            "address",
            "provider",
            "verifiedAt"
          ]
        },
        {
          "properties": {
            "type": {
              "const": "cawg.document_verification"
            }
          },
          "required": [
            "name",
            "provider",
            "verifiedAt"
          ]
        },
        {
          "properties": {
            "type": {
              "const": "cawg.affiliation"
            }
          },
          "required": [
            "provider",
            "verifiedAt"
          ]
        },
        {
          "properties": {
            "type": {
              "const": "cawg.web_site"
            }
          },
          "required": [
            "uri",
            "verifiedAt"
          ]
        }
      ]
    }
  },
  "@context": [
    "https://www.w3.org/2018/credentials/v1",
    "https://schemas.originvault.box/contexts/trust-chain-core.jsonld"
  ]
}