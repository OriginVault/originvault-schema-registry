{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "@context": [
    "https://www.w3.org/ns/credentials/v2",
    "https://schema.org",
    "https://w3id.org/security/multikey/v1",
    "https://schemas.originvault.box/contexts/trust-chain-core.jsonld",
    "https://adrs.originvault.box/contexts/adr-context.jsonld"
  ],
  "$id": "https://schemas.originvault.box/TrustedIssuer",
  "title": "Trusted Issuer Accreditation",
  "description": "Verifiable Accreditation for trusted issuers within any trust chain, following cheqd DTC patterns for namespace-based trust hierarchies and multi-root architecture.",
  "type": "object",
  "examples": [
    {
      "@context": [
        "https://www.w3.org/ns/credentials/v2",
        "https://schema.org",
        "https://w3id.org/security/multikey/v1",
        "https://schemas.originvault.box/contexts/trust-chain-core.jsonld",
        "https://adrs.originvault.box/contexts/adr-context.jsonld"
      ],
      "type": ["VerifiableCredential", "VerifiableAccreditation", "TrustedIssuerAccreditation"],
      "issuer": {
        "id": "did:cheqd:mainnet:namespace-root-originvault-box",
        "name": "OriginVault Namespace Authority",
        "rootType": "namespace"
      },
      "issuanceDate": "2025-01-14T10:30:00Z",
      "expirationDate": "2026-01-14T10:30:00Z",
      "credentialSubject": {
        "id": "did:cheqd:mainnet:content-studio-issuer-123",
        "accreditedFor": [
          {
            "namespaceId": "content-authenticity",
            "schemaId": "https://schemas.originvault.box/ContentAuthenticityCredential",
            "types": ["VerifiableCredential", "ContentAuthenticityCredential"],
            "validUntil": "2026-01-14T10:30:00Z"
          }
        ],
        "trustLevel": "gold",
        "blockchainResourceId": "did:cheqd:mainnet:content-studio-issuer-123/resources/issuer-accreditation-abc123"
      },
      "termsOfUse": {
        "type": "AccreditationPolicy",
        "rootAuthorisation": "did:ov:namespace-root/resources/originvault-namespace-authorization",
        "trustChainScope": "content-authenticity",
        "governanceFramework": "https://governance.originvault.box/trust-chain-governance-v1"
      },
      "rootType": "namespace",
      "governanceModel": {
        "type": "dao",
        "participants": ["did:cheqd:mainnet:governance-council-789"]
      },
      "delegationChain": [
        "did:ov:namespace-root",
        "did:cheqd:mainnet:namespace-root-originvault-box"
      ],
      "trustChainContext": "Multi-root trust architecture supporting diverse authority models",
      "architecturalRationale": "trustedIssuerStrategy",
      "principleAlignment": ["proofFirstTrust", "communityCollaboration", "securityFirst"],
      "metadata": {
        "version": "1.0.0",
        "schemaType": "TrustedIssuer", 
        "bffIntegration": true
      },
      "createdAt": "2025-01-14T10:30:00Z",
      "updatedAt": "2025-01-14T10:30:00Z",
      "blockchainSync": {
        "transactionHash": "0xabc123def456...",
        "blockNumber": 12345678,
        "networkId": "cheqd:mainnet",
        "lastSynced": "2025-01-14T10:31:00Z"
      }
    },
    {
      "@context": [
        "https://www.w3.org/ns/credentials/v2", 
        "https://schema.org",
        "https://w3id.org/security/multikey/v1",
        "https://schemas.originvault.box/contexts/trust-chain-core.jsonld",
        "https://adrs.originvault.box/contexts/adr-context.jsonld"
      ],
      "type": ["VerifiableCredential", "VerifiableAccreditation", "TrustedIssuerAccreditation"],
      "issuer": {
        "id": "did:ethr:0x456789",
        "name": "Independent Creator Collective",
        "rootType": "community"
      },
      "issuanceDate": "2025-01-14T15:45:00Z",
      "credentialSubject": {
        "id": "did:key:z6MkhaXgBZDvotDkL5257faiztiGiC2QtKLGpbnnEGta2doK",
        "accreditedFor": [
          {
            "namespaceId": "creator-reputation",
            "schemaId": "https://schemas.originvault.box/CreatorReputationCredential",
            "types": ["VerifiableCredential", "CreatorReputationCredential"]
          }
        ],
        "trustLevel": "silver"
      },
      "termsOfUse": {
        "type": "AccreditationPolicy", 
        "rootAuthorisation": "did:ethr:0x789abc/resources/community-root-authorization",
        "trustChainScope": "creator-reputation"
      },
      "rootType": "community",
      "governanceModel": {
        "type": "consensus",
        "participants": ["did:ethr:0x456789", "did:ethr:0xabc123"]
      },
      "architecturalRationale": "multiRootArchitecture",
      "principleAlignment": ["userSovereignty", "communityCollaboration", "privacyByDesign"]
    }
  ],
  "required": ["@context", "type", "issuer", "issuanceDate", "credentialSubject", "termsOfUse"],
  "properties": {
    "@context": {
      "type": "array",
      "items": {"type": "string"},
      "default": [
        "https://www.w3.org/ns/credentials/v2",
        "https://schema.org",
        "https://w3id.org/security/multikey/v1",
        "https://schemas.originvault.box/contexts/trust-chain-core.jsonld",
        "https://adrs.originvault.box/contexts/adr-context.jsonld"
      ],
      "description": "JSON-LD context for interoperability with verifiable credentials and linked data ecosystems",
      "examples": [
        ["https://www.w3.org/ns/credentials/v2", "https://schema.org"],
        ["https://www.w3.org/ns/credentials/v2", "https://schemas.originvault.box/contexts/trust-chain-core.jsonld"]
      ]
    },
    "type": {
      "type": "array",
      "items": {"type": "string"},
      "default": ["VerifiableCredential", "VerifiableAccreditation", "TrustedIssuerAccreditation"],
      "description": "Credential types following W3C Verifiable Credentials specification",
      "examples": [
        ["VerifiableCredential", "VerifiableAccreditation", "TrustedIssuerAccreditation"],
        ["VerifiableCredential", "TrustedIssuerAccreditation"]
      ]
    },
    "issuer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^did:(cheqd|key|web|ethr):[a-zA-Z0-9._:-]+$",
          "minLength": 20,
          "maxLength": 200,
          "description": "DID of the issuing authority - could be any namespace root, platform root, or user root",
          "examples": [
            "did:cheqd:mainnet:namespace-root-originvault-box",
            "did:ethr:0x456789abc123",
            "did:web:governance.originvault.box"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 100,
          "description": "Name of the issuing authority",
          "examples": [
            "OriginVault Namespace Authority",
            "Independent Creator Collective",
            "Enterprise Trust Council"
          ]
        },
        "rootType": {
          "type": "string",
          "enum": ["namespace", "platform", "user", "organization", "community", "concept"],
          "description": "Type of root authority issuing this accreditation",
          "examples": ["namespace", "community", "organization"]
        }
      },
      "required": ["id"],
      "additionalProperties": false
    },
    "issuanceDate": {
      "type": "string",
      "format": "date-time",
      "description": "When the accreditation was issued",
      "examples": ["2025-01-14T10:30:00Z", "2025-01-14T15:45:30.123Z"]
    },
    "expirationDate": {
      "type": "string",
      "format": "date-time",
      "description": "When the accreditation expires",
      "examples": ["2026-01-14T10:30:00Z", "2025-12-31T23:59:59Z"]
    },
    "credentialSubject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^did:(cheqd|key|web|ethr):[a-zA-Z0-9._:-]+$",
          "minLength": 20,
          "maxLength": 200,
          "description": "DID of the accredited trusted issuer",
          "examples": [
            "did:cheqd:mainnet:content-studio-issuer-123",
            "did:key:z6MkhaXgBZDvotDkL5257faiztiGiC2QtKLGpbnnEGta2doK",
            "did:web:issuer.contentplatform.com"
          ]
        },
        "accreditedFor": {
          "type": "array",
          "minItems": 1,
          "maxItems": 20,
          "items": {
            "type": "object",
            "properties": {
              "namespaceId": {
                "type": "string",
                "minLength": 3,
                "maxLength": 100,
                "description": "Namespace or domain for which the issuer is accredited",
                "examples": [
                  "originvault.box",
                  "content-authenticity",
                  "user-reputation",
                  "platform-governance"
                ]
              },
              "schemaId": {
                "type": "string",
                "minLength": 10,
                "maxLength": 300,
                "description": "Schema ID for which the issuer is accredited",
                "examples": [
                  "did:cheqd:testnet:8ea036da-f340-480d-8952-f5561ea1763c/resources/b10146d7-0d0f-41e0-8ee3-c76db64890be",
                  "https://schemas.originvault.box/ContentAuthenticityCredential"
                ]
              },
              "types": {
                "type": "array",
                "minItems": 1,
                "maxItems": 10,
                "items": {"type": "string"},
                "description": "Credential types the issuer can issue",
                "examples": [
                  ["VerifiableCredential", "VerifiableAccreditation"],
                  ["VerifiableCredential", "ContentAuthenticityCredential"]
                ]
              },
              "limitJurisdiction": {
                "type": "string",
                "description": "Geographic or regulatory restriction (optional)",
                "examples": [
                  "https://publications.europa.eu/resource/authority/atu/FIN",
                  "https://publications.europa.eu/resource/authority/atu/USA"
                ]
              },
              "validUntil": {
                "type": "string",
                "format": "date-time",
                "description": "Expiration date of this specific accreditation",
                "examples": ["2026-01-14T10:30:00Z", "2025-12-31T23:59:59Z"]
              }
            },
            "required": ["namespaceId", "schemaId", "types"],
            "additionalProperties": false
          },
          "description": "List of accreditations granted to this issuer"
        },
        "trustLevel": {
          "type": "string",
          "enum": ["bronze", "silver", "gold", "platinum"],
          "description": "Trust level assigned within this trust chain",
          "examples": ["gold", "silver", "platinum"]
        },
        "blockchainResourceId": {
          "type": "string",
          "minLength": 10,
          "maxLength": 300,
          "description": "DID-Linked Resource ID on blockchain (cheqd, ethereum, etc.)",
          "examples": [
            "did:cheqd:mainnet:content-studio-issuer-123/resources/issuer-accreditation-abc123",
            "did:ethr:0x456789/resources/platform-trust-authorization-def456"
          ]
        }
      },
      "required": ["id", "accreditedFor"],
      "additionalProperties": false
    },
    "termsOfUse": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "AccreditationPolicy",
          "description": "Must be AccreditationPolicy per cheqd DTC spec"
        },
        "parentAccreditation": {
          "type": "string",
          "minLength": 10,
          "maxLength": 300,
          "description": "DID URL of the parent accreditation in the trust chain (if not a root)",
          "examples": [
            "did:cheqd:mainnet:namespace-root/resources/18de60ec-bed1-42e5-980c-601c432bc60b",
            "did:ethr:platform-authority/resources/platform-root-authorization"
          ]
        },
        "rootAuthorisation": {
          "type": "string", 
          "minLength": 10,
          "maxLength": 300,
          "description": "DID URL of the root authority for this trust chain",
          "examples": [
            "did:ov:namespace-root/resources/originvault-namespace-authorization",
            "did:cheqd:community-root/resources/community-governance-authorization",
            "did:ethr:platform-root/resources/platform-authority-authorization"
          ]
        },
        "trustChainScope": {
          "type": "string",
          "minLength": 3,
          "maxLength": 100,
          "description": "Scope or purpose of this trust chain",
          "examples": [
            "content-authenticity",
            "user-reputation", 
            "platform-governance",
            "community-trust",
            "data-provenance"
          ]
        },
        "governanceFramework": {
          "type": "string",
          "minLength": 10,
          "maxLength": 300,
          "description": "Reference to governance policies for this trust chain",
          "examples": [
            "https://governance.originvault.box/trust-chain-governance-v1",
            "did:web:governance.contentplatform.com/resources/trust-policy-v2"
          ]
        }
      },
      "required": ["type", "rootAuthorisation", "trustChainScope"],
      "additionalProperties": false
    },
    "proof": {
      "type": "object",
      "description": "Cryptographic proof of the accreditation"
    },
    "rootType": {
      "type": "string",
      "enum": ["self-sovereign", "delegated", "federated", "hybrid"],
      "description": "Multi-root trust pattern type",
      "examples": ["delegated", "federated", "hybrid"]
    },
    "governanceModel": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["dao", "committee", "consensus", "hierarchical"],
          "description": "Governance model for this trust relationship"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^did:(cheqd|key|web|ethr):[a-zA-Z0-9._:-]+$"
          },
          "description": "DIDs of governance participants"
        }
      },
      "examples": [
        {
          "type": "dao",
          "participants": ["did:cheqd:mainnet:governance-council-789"]
        },
        {
          "type": "consensus",
          "participants": ["did:ethr:0x456789", "did:ethr:0xabc123"]
        }
      ]
    },
    "delegationChain": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^did:(cheqd|key|web|ethr):[a-zA-Z0-9._:-]+$"
      },
      "description": "Chain of trust delegation from root to current authority",
      "examples": [
        ["did:ov:namespace-root", "did:cheqd:mainnet:namespace-root-originvault-box"],
        ["did:ethr:platform-root", "did:ethr:regional-authority", "did:ethr:local-issuer"]
      ]
    },
    "trustChainContext": {
      "type": "string",
      "minLength": 10,
      "maxLength": 500,
      "description": "Contextual information about the trust chain purpose and scope",
      "examples": [
        "Multi-root trust architecture supporting diverse authority models",
        "Content authenticity verification chain for creative industries",
        "Community-governed reputation system for decentralized platforms"
      ]
    },
    "architecturalRationale": {
      "type": "string",
      "description": "Reference to ADR explaining the architectural decisions behind this trust pattern",
      "examples": [
        "trustedIssuerStrategy",
        "multiRootArchitecture"
      ]
    },
    "principleAlignment": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "creatorFirst",
          "userSovereignty", 
          "proofFirstTrust",
          "inclusiveIntegration",
          "communityCollaboration",
          "empowermentOverExtraction",
          "privacyByDesign",
          "modularOpenSource",
          "securityFirst",
          "resilienceByDesign"
        ]
      },
      "description": "OriginVault mission principles that this trust pattern implements",
      "examples": [
        ["proofFirstTrust", "communityCollaboration", "securityFirst"],
        ["userSovereignty", "privacyByDesign", "modularOpenSource"]
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Schema version for tracking evolution"
        },
        "schemaType": {
          "type": "string",
          "const": "TrustedIssuer",
          "description": "Schema type identifier for BFF integration"
        },
        "bffIntegration": {
          "type": "boolean",
          "description": "Indicates if schema supports BFF integration patterns"
        }
      },
      "examples": [
        {
          "version": "1.0.0",
          "schemaType": "TrustedIssuer",
          "bffIntegration": true
        }
      ]
    },
    "createdAt": {
      "type": "string",
      "format": "date-time",
      "description": "Timestamp when the accreditation was created",
      "examples": ["2025-01-14T10:30:00Z", "2025-01-14T15:45:30.123Z"]
    },
    "updatedAt": {
      "type": "string",
      "format": "date-time",
      "description": "Timestamp when the accreditation was last updated",
      "examples": ["2025-01-14T10:30:00Z", "2025-01-14T15:45:30.123Z"]
    },
    "blockchainSync": {
      "type": "object",
      "properties": {
        "transactionHash": {
          "type": "string",
          "pattern": "^0x[a-fA-F0-9]{64}$",
          "description": "Blockchain transaction hash for this accreditation"
        },
        "blockNumber": {
          "type": "integer",
          "minimum": 1,
          "description": "Block number where transaction was confirmed"
        },
        "networkId": {
          "type": "string",
          "enum": ["cheqd:mainnet", "cheqd:testnet", "ethereum:mainnet", "ethereum:sepolia"],
          "description": "Blockchain network identifier"
        },
        "lastSynced": {
          "type": "string",
          "format": "date-time",
          "description": "Last blockchain synchronization timestamp"
        }
      },
      "examples": [
        {
          "transactionHash": "0xabc123def456...",
          "blockNumber": 12345678,
          "networkId": "cheqd:mainnet",
          "lastSynced": "2025-01-14T10:31:00Z"
        }
      ]
    }
  },
  "additionalProperties": false
} 